<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/Assets/Scripts/FloorGenerator.cs">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/Assets/Scripts/FloorGenerator.cs" />
              <option name="originalContent" value="using UnityEngine;&#10;&#10;public class FloorGenerator : MonoBehaviour&#10;{&#10;    public event System.Action&lt;float, float, float, float&gt; OnFloorGenerated;&#10;    public GameObject[] floorPrefabs;&#10;    public int worldSize = 2;&#10;    private float spacing = 4f;&#10;&#10;    void Start()&#10;    {&#10;        GameObject prefab = floorPrefabs[Random.Range(0, floorPrefabs.Length)];&#10;        spacing = prefab.GetComponentInChildren&lt;RefPointFloor&gt;().getDistance() * 2;&#10;        GenerateFloor();&#10;&#10;&#10;    }&#10;&#10;    void GenerateFloor()&#10;    {&#10;        for (int x = 0; x &lt; worldSize; x++)&#10;        {&#10;            for (int z = 0; z &lt; worldSize; z++)&#10;&#10;                Vector3 position = new Vector3(x * spacing, 0, z * spacing);&#10;                Debug.Log(spacing);&#10;&#10;                Vector3 position = new Vector3(x * spacing, 0, z * spacing);&#10;                Debug.Log(spacing);&#10;                GameObject prefab = floorPrefabs[Random.Range(0, floorPrefabs.Length)];&#10;                Instantiate(prefab, position, Quaternion.identity);&#10;        var minX = -spacing / 2;&#10;        var minZ = -spacing / 2;&#10;        var maxX = worldSize * spacing - spacing / 2;&#10;        var maxZ = worldSize * spacing - spacing / 2;&#10;        var minZ = -spacing / 2;&#10;        var maxX = worldSize * spacing - spacing / 2;&#10;        var maxZ = worldSize * spacing - spacing / 2;&#10;        OnFloorGenerated?.Invoke(minX, minZ, maxX, maxZ);&#10;    }&#10;}" />
              <option name="updatedContent" value="using UnityEngine;&#10;&#10;public class FloorGenerator : MonoBehaviour&#10;{&#10;    public event System.Action&lt;float, float, float, float&gt; OnFloorGenerated;&#10;    public GameObject[] floorPrefabs;&#10;    public int worldSize = 2;&#10;    private float _spacing = 4f;&#10;&#10;    void Start()&#10;    {&#10;        GameObject prefab = floorPrefabs[Random.Range(0, floorPrefabs.Length)];&#10;        _spacing = prefab.GetComponentInChildren&lt;RefPointFloor&gt;().getDistance() * 2;&#10;        GenerateFloor();&#10;    }&#10;&#10;    void GenerateFloor()&#10;    {&#10;        for (int x = 0; x &lt; worldSize; x++)&#10;        {&#10;            for (int z = 0; z &lt; worldSize; z++)&#10;            {&#10;                Vector3 position = new Vector3(x * _spacing, 0, z * _spacing);&#10;                GameObject prefab = floorPrefabs[Random.Range(0, floorPrefabs.Length)];&#10;                Instantiate(prefab, position, Quaternion.identity);&#10;            }&#10;        }&#10;&#10;        var minX = -_spacing / 2;&#10;        var minZ = -_spacing / 2;&#10;        var maxX = worldSize * _spacing - _spacing / 2;&#10;        var maxZ = worldSize * _spacing - _spacing / 2;&#10;        OnFloorGenerated?.Invoke(minX, minZ, maxX, maxZ);&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>